<%- contentFor('body') %>

<div class="container mt-4">
  <div class="row mb-4">
    <div class="col-md-12">
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="/user">Trang chủ</a></li>
          <li class="breadcrumb-item active" aria-current="page">Giỏ hàng</li>
        </ol>
      </nav>
    </div>
  </div>

  <h1 class="mb-4">Giỏ hàng của bạn</h1>

  <% if (cartItems && cartItems.length > 0) { %>
    <div class="row">
      <div class="col-md-8">
        <div class="card">
          <div class="card-header bg-light">
            <h5 class="mb-0">Sản phẩm trong giỏ hàng (<%= cartItems.length %> mục)</h5>
          </div>
          <div class="card-body p-0">
            <div class="table-responsive">
              <table class="table table-hover mb-0">
                <thead class="thead-light">
                  <tr>
                    <th scope="col" style="width: 100px;">Ảnh</th>
                    <th scope="col">Sản phẩm</th>
                    <th scope="col" style="width: 150px;">Đơn giá</th>
                    <th scope="col" style="width: 150px;">Số lượng</th>
                    <th scope="col" style="width: 150px;">Thành tiền</th>
                    <th scope="col" style="width: 50px;"></th>
                  </tr>
                </thead>
                <tbody>
                  <% let totalPrice = 0; %>
                  <% for(const item of cartItems) { %>
                    <% const product = item.product; %>
                    <% const itemTotal = product.price * item.quantity; %>
                    <% totalPrice += itemTotal; %>
                    <tr data-product-id="<%= product._id %>">
                      <td>
                        <img src="<%= product.imageUrl || '/images/default-product.jpg' %>" class="img-thumbnail" alt="<%= product.title %>" style="width: 80px;">
                      </td>
                      <td>
                        <a href="/user/product/<%= product._id %>" class="font-weight-bold"><%= product.title %></a>
                        <div class="small text-muted"><%= product.categoryName %> | <%= product.brandName %></div>
                      </td>
                      <td class="text-right font-weight-bold">
                        <%= product.price.toLocaleString('vi-VN') %> VNĐ
                      </td>
                      <td>
                        <div class="input-group input-group-sm quantity-group">
                          <div class="input-group-prepend">
                            <button class="btn btn-outline-secondary quantity-decrease" type="button">-</button>
                          </div>
                          <input type="number" class="form-control text-center quantity-input" value="<%= item.quantity %>" min="1" max="<%= product.quantity %>" 
                                 data-product-id="<%= product._id %>" data-product-price="<%= product.price %>">
                          <div class="input-group-append">
                            <button class="btn btn-outline-secondary quantity-increase" type="button">+</button>
                          </div>
                        </div>
                      </td>
                      <td class="text-right font-weight-bold item-total">
                        <%= itemTotal.toLocaleString('vi-VN') %> VNĐ
                      </td>
                      <td class="text-center">
                        <form action="/user/cart/remove" method="POST">
                          <input type="hidden" name="productId" value="<%= product._id %>">
                          <button type="submit" class="btn btn-sm btn-outline-danger" title="Xóa">
                            <i class="fas fa-trash-alt"></i>
                          </button>
                        </form>
                      </td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
        
        <div class="mt-3">
          <a href="/user/products" class="btn btn-outline-primary">
            <i class="fas fa-arrow-left mr-2"></i>Tiếp tục mua sắm
          </a>
          <a href="/user/orders" class="btn btn-outline-info ms-2">
            <i class="fas fa-history mr-2"></i>Xem lịch sử mua hàng
          </a>
        </div>
      </div>
      
      <div class="col-md-4">
        <div class="card">
          <div class="card-header bg-light">
            <h5 class="mb-0">Tóm tắt đơn hàng</h5>
          </div>
          <div class="card-body">
            <div class="d-flex justify-content-between mb-2">
              <span>Tổng tiền hàng:</span>
              <span class="font-weight-bold cart-subtotal"><%= totalPrice.toLocaleString('vi-VN') %> VNĐ</span>
            </div>
            
            <div class="d-flex justify-content-between mb-2">
              <span>Phí vận chuyển:</span>
              <% const shippingFee = totalPrice >= 500000 ? 0 : 30000; %>
              <span class="shipping-fee"><%= shippingFee.toLocaleString('vi-VN') %> VNĐ</span>
            </div>
            
            <% if (totalPrice >= 500000) { %>
              <div class="alert alert-success small mb-3">
                <i class="fas fa-shipping-fast mr-1"></i> Bạn được miễn phí vận chuyển
              </div>
            <% } else { %>
              <div class="alert alert-info small mb-3">
                <i class="fas fa-info-circle mr-1"></i> Mua thêm <%= (500000 - totalPrice).toLocaleString('vi-VN') %> VNĐ để được miễn phí vận chuyển
              </div>
            <% } %>
            
            <hr>
            
            <div class="d-flex justify-content-between mb-4">
              <span class="font-weight-bold">Tổng thanh toán:</span>
              <span class="font-weight-bold text-primary h5 cart-total"><%= (totalPrice + shippingFee).toLocaleString('vi-VN') %> VNĐ</span>
            </div>
            
            <button class="btn btn-success btn-block btn-lg checkout-btn" id="checkoutBtn">
              <i class="fas fa-lock mr-2"></i>Tiến hành thanh toán
            </button>
          </div>
        </div>
      </div>
    </div>
  <% } else { %>
    <div class="alert alert-info">
      <p>Giỏ hàng của bạn đang trống!</p>
      <p>Hãy tiếp tục mua sắm để thêm sản phẩm vào giỏ hàng.</p>
      <a href="/user/products" class="btn btn-primary mt-2">
        <i class="fas fa-shopping-basket mr-2"></i>Tiếp tục mua sắm
      </a>
    </div>
  <% } %>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const quantityInputs = document.querySelectorAll('.quantity-input');
    const decreaseButtons = document.querySelectorAll('.quantity-decrease');
    const increaseButtons = document.querySelectorAll('.quantity-increase');
    const checkoutBtn = document.getElementById('checkoutBtn');
    
    // Xử lý nút giảm số lượng
    decreaseButtons.forEach(button => {
      button.addEventListener('click', function() {
        const input = this.parentElement.nextElementSibling;
        let value = parseInt(input.value);
        if (value > 1) {
          input.value = value - 1;
          updateQuantity(input);
        }
      });
    });
    
    // Xử lý nút tăng số lượng
    increaseButtons.forEach(button => {
      button.addEventListener('click', function() {
        const input = this.parentElement.previousElementSibling;
        let value = parseInt(input.value);
        const max = parseInt(input.getAttribute('max'));
        if (value < max) {
          input.value = value + 1;
          updateQuantity(input);
        }
      });
    });
    
    // Xử lý khi thay đổi giá trị ô input
    quantityInputs.forEach(input => {
      input.addEventListener('change', function() {
        updateQuantity(this);
      });
    });
    
    // Hàm cập nhật số lượng
    function updateQuantity(input) {
      const productId = input.dataset.productId;
      const quantity = parseInt(input.value);
      const price = parseFloat(input.dataset.productPrice);
      
      // Cập nhật giao diện
      const row = input.closest('tr');
      const totalCell = row.querySelector('.item-total');
      const itemTotal = price * quantity;
      totalCell.textContent = itemTotal.toLocaleString('vi-VN') + ' VNĐ';
      
      // Gửi yêu cầu AJAX để cập nhật giỏ hàng
      fetch('/user/cart/update-quantity', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          productId: productId,
          quantity: quantity
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // Cập nhật tổng tiền trong tóm tắt đơn hàng
          const subtotalElement = document.querySelector('.cart-subtotal');
          const shippingFeeElement = document.querySelector('.shipping-fee');
          const totalElement = document.querySelector('.cart-total');
          
          const subtotal = data.totalPrice;
          const shippingFee = data.shippingFee;
          const total = data.finalTotal;
          
          subtotalElement.textContent = subtotal.toLocaleString('vi-VN') + ' VNĐ';
          shippingFeeElement.textContent = shippingFee.toLocaleString('vi-VN') + ' VNĐ';
          totalElement.textContent = total.toLocaleString('vi-VN') + ' VNĐ';
        }
      })
      .catch(error => {
        console.error('Lỗi khi cập nhật giỏ hàng:', error);
      });
    }
    
    // Xử lý nút Thanh toán
    if (checkoutBtn) {
      checkoutBtn.addEventListener('click', function() {
        // Vô hiệu hóa nút để tránh click nhiều lần
        checkoutBtn.disabled = true;
        checkoutBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang xử lý...';
        
        // Hiển thị xác nhận
        if (confirm('Bạn có chắc chắn muốn đặt hàng?')) {
          // Gửi yêu cầu đặt hàng
          fetch('/user/checkout', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            }
          })
          .then(response => {
            if (!response.ok) {
              throw new Error(`Mã lỗi: ${response.status}`);
            }
            return response.json();
          })
          .then(data => {
            if (data.success) {
              showSuccessMessage('Đặt hàng thành công! Đơn hàng của bạn đã được lưu vào lịch sử mua hàng.');
              // Chuyển hướng đến trang thành công sau khi đặt hàng
              setTimeout(() => {
                window.location.href = data.redirectUrl || '/user/orders';
              }, 1500);
            } else {
              throw new Error(data.message || 'Lỗi không xác định khi đặt hàng');
            }
          })
          .catch(error => {
            console.error('Lỗi khi đặt hàng:', error);
            showErrorMessage(error.message || 'Đã xảy ra lỗi khi đặt hàng. Vui lòng thử lại sau.');
            
            // Khôi phục nút
            checkoutBtn.disabled = false;
            checkoutBtn.innerHTML = '<i class="fas fa-lock me-2"></i>Tiến hành thanh toán';
          });
        } else {
          // Người dùng hủy xác nhận, khôi phục nút
          checkoutBtn.disabled = false;
          checkoutBtn.innerHTML = '<i class="fas fa-lock me-2"></i>Tiến hành thanh toán';
        }
      });
    }

    // Thêm hai hàm hiển thị thông báo
    function showSuccessMessage(message) {
      // Kiểm tra và xóa thông báo cũ nếu có
      const existingAlert = document.querySelector('.checkout-alert');
      if (existingAlert) {
        existingAlert.remove();
      }

      // Tạo phần tử thông báo mới
      const alertElement = document.createElement('div');
      alertElement.className = 'alert alert-success checkout-alert';
      alertElement.innerHTML = `<i class="fas fa-check-circle me-2"></i>${message}`;
      
      // Thêm vào DOM sau nút thanh toán
      const cardBody = document.querySelector('.checkout-btn').closest('.card-body');
      cardBody.appendChild(alertElement);
    }

    function showErrorMessage(message) {
      // Kiểm tra và xóa thông báo cũ nếu có
      const existingAlert = document.querySelector('.checkout-alert');
      if (existingAlert) {
        existingAlert.remove();
      }

      // Tạo phần tử thông báo mới
      const alertElement = document.createElement('div');
      alertElement.className = 'alert alert-danger mt-3 checkout-alert';
      alertElement.innerHTML = `<i class="fas fa-exclamation-circle me-2"></i>${message}`;
      
      // Thêm vào DOM sau nút thanh toán
      const cardBody = document.querySelector('.checkout-btn').closest('.card-body');
      cardBody.appendChild(alertElement);
    }
  });
</script> 