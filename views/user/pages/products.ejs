<%- contentFor('body') %>

<div class="container mt-4">
  <h1 class="mb-4 fw-bold">Danh s√°ch s·∫£n ph·∫©m</h1>

  <div class="row">
    <!-- C·ªôt l·ªçc s·∫£n ph·∫©m (3/12) -->
    <div class="col-md-3 mb-4">
      <div class="card shadow-sm border-0 h-100">
        <div class="card-header bg-light">
          <h5 class="mb-0 fw-bold">B·ªô l·ªçc s·∫£n ph·∫©m</h5>
        </div>
        <div class="card-body">
          <div class="mb-3">
            <label for="categoryFilter" class="form-label">Danh m·ª•c:</label>
            <select class="form-select rounded-pill" id="categoryFilter">
              <option value="">T·∫•t c·∫£ danh m·ª•c</option>
              <% if (categories && categories.length > 0) { %>
                <% categories.forEach(category => { %>
                  <option value="<%= category._id %>"><%= category.name %></option>
                <% }); %>
              <% } %>
            </select>
          </div>
          <div class="mb-3">
            <label for="brandFilter" class="form-label">Th∆∞∆°ng hi·ªáu:</label>
            <select class="form-select rounded-pill" id="brandFilter">
              <option value="">T·∫•t c·∫£ th∆∞∆°ng hi·ªáu</option>
              <% if (brands && brands.length > 0) { %>
                <% brands.forEach(brand => { %>
                  <option value="<%= brand._id %>"><%= brand.name %></option>
                <% }); %>
              <% } %>
            </select>
          </div>
          <div class="mb-3">
            <label for="priceFilter" class="form-label">Gi√°:</label>
            <select class="form-select rounded-pill" id="priceFilter">
              <option value="">T·∫•t c·∫£ m·ª©c gi√°</option>
              <option value="0-100000">D∆∞·ªõi 100.000 VNƒê</option>
              <option value="100000-500000">100.000 - 500.000 VNƒê</option>
              <option value="500000-1000000">500.000 - 1.000.000 VNƒê</option>
              <option value="1000000-max">Tr√™n 1.000.000 VNƒê</option>
            </select>
          </div>
          <div class="d-grid gap-2">
            <button class="btn btn-primary rounded-pill" id="applyFilter">√Åp d·ª•ng</button>
            <button class="btn btn-outline-secondary rounded-pill" id="resetFilter">ƒê·∫∑t l·∫°i</button>
          </div>
        </div>
      </div>
    </div>

    <!-- C·ªôt danh s√°ch s·∫£n ph·∫©m (9/12) -->
    <div class="col-md-9">
      <% if (products && products.length > 0) { %>
        <div class="row" id="productList">
          <% for (let product of products) { %>
            <div class="col-lg-4 col-md-6 mb-4 product-item"
                 data-category="<%= product.category %>" 
                 data-brand="<%= product.brand %>" 
                 data-price="<%= product.price %>">
              <div class="card h-100 shadow-sm border-0">
                <img src="<%= product.imageUrl || '/images/default-product.jpg' %>" class="card-img-top" alt="<%= product.title %>" style="height: 200px; object-fit: cover;">
                <div class="card-body d-flex flex-column">
                  <h5 class="card-title text-truncate"><%= product.title %></h5>
                  <p class="card-text text-muted mb-1"><small><%= product.categoryName %> | <%= product.brandName %></small></p>
                  <p class="card-text text-truncate"><%= product.description %></p>
                  <p class="card-text text-primary fw-bold mt-auto"><%= product.price.toLocaleString('vi-VN') %> VNƒê</p>
                  <div class="d-flex justify-content-between mt-2">
                    <a href="/user/product/<%= product._id %>" class="btn btn-outline-primary btn-sm rounded-pill">Xem chi ti·∫øt</a>
                    <form action="/user/cart/add" method="POST">
                      <input type="hidden" name="productId" value="<%= product._id %>">
                      <input type="hidden" name="quantity" value="1">
                      <button type="submit" class="btn btn-success btn-sm rounded-pill" id="addToCart">
                        <i class="fas fa-cart-plus me-1"></i> Th√™m
                      </button>
                      
                    </form>
                  </div>
                </div>
              </div>
            </div>
          <% } %>
        </div>
      <% } else { %>
        <div class="alert alert-info rounded-3">Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o.</div>
      <% } %>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const addToCartBtn = document.getElementById('addToCart');
    if (addToCartBtn) {
      addToCartBtn.addEventListener('click', function (event) {
        event.preventDefault(); // NgƒÉn form submit ngay
        alert('Th√™m th√†nh c√¥ng! üõí');

        // N·∫øu b·∫°n mu·ªën submit form sau alert:
        setTimeout(() => {
          addToCartBtn.closest('form').submit();
        }, 100); // Delay nh·ªè sau alert
      });
    }
  });
  document.addEventListener('DOMContentLoaded', function () {
    const productList = document.getElementById('productList');
    const categoryFilter = document.getElementById('categoryFilter');
    const brandFilter = document.getElementById('brandFilter');
    const priceFilter = document.getElementById('priceFilter');
    const applyFilterBtn = document.getElementById('applyFilter');
    const resetFilterBtn = document.getElementById('resetFilter');
    const products = document.querySelectorAll('.product-item');

    applyFilterBtn.addEventListener('click', function () {
      filterProducts();
    });

    resetFilterBtn.addEventListener('click', function () {
      categoryFilter.value = '';
      brandFilter.value = '';
      priceFilter.value = '';
      filterProducts();
    });

    function filterProducts() {
      const categoryValue = categoryFilter.value;
      const brandValue = brandFilter.value;
      const priceValue = priceFilter.value;

      products.forEach(product => {
        let showProduct = true;

        if (categoryValue && product.dataset.category !== categoryValue) {
          showProduct = false;
        }

        if (showProduct && brandValue && product.dataset.brand !== brandValue) {
          showProduct = false;
        }

        if (showProduct && priceValue) {
          const productPrice = parseFloat(product.dataset.price);
          const [minPrice, maxPrice] = priceValue.split('-');

          if (minPrice && maxPrice === 'max') {
            if (productPrice < parseFloat(minPrice)) {
              showProduct = false;
            }
          } else if (minPrice && maxPrice) {
            if (productPrice < parseFloat(minPrice) || productPrice > parseFloat(maxPrice)) {
              showProduct = false;
            }
          }
        }

        product.style.display = showProduct ? 'block' : 'none';
      });
    }
  });
</script>
